variables:
  AZURE_LOCATION: germanywestcentral
  AZURE_STORAGE_CONTAINER_NAME: tfstate
  AZURE_STORAGE_TF_STATEFILE: terraformstate
  TERRAFORM_DIR: iac
  AZURE_CONTAINER_REGISTRY_NAME: yuyatinnefeldContainerRegistryDev
  AZURE_CONTAINER_REGISTRY_REPO_NAME: yuyatinnefeldcontainerregistrydev.azurecr.io
  IMAGE_NAME: hello-world

stages:
  - initial-setup
  - terraform-plan
  - terraform-apply
  - docker-push

############################ Create Terraform Statefile Bucket ############################

.create-statefile-bucket:
  image: mcr.microsoft.com/azure-cli
  stage: initial-setup
  script:
    - echo "🔍️ Checking if $AZURE_STORAGE_TF_STATEFILE$ENV exists"
    - |
      if az storage account show --name $AZURE_STORAGE_TF_STATEFILE$ENV --resource-group $AZURE_STORAGE_RESOURCE_GROUP &> /dev/null; then
        echo "✨ $AZURE_STORAGE_TF_STATEFILE$ENV already exists"
      else
        echo "🔧 The statefile bucket does not exist. Creating"
        echo "Create resource group..."
        az group create --name $AZURE_STORAGE_RESOURCE_GROUP --location $AZURE_LOCATION
        echo "✅ DONE - resource group ✅"
        echo "Create storage account..."
        az storage account create --name $AZURE_STORAGE_TF_STATEFILE$ENV --resource-group $AZURE_STORAGE_RESOURCE_GROUP --location $AZURE_LOCATION --sku Standard_RAGRS --kind StorageV2 --allow-blob-public-access false
        echo "✅ DONE - storage account ✅"
        echo "Create blob container..."
        az storage container create --name $AZURE_STORAGE_CONTAINER_NAME --account-name $AZURE_STORAGE_TF_STATEFILE$ENV
        echo "✅ DONE - blob container ✅"
      fi

create-statefile-bucket-dev:
  extends: 
    - .create-statefile-bucket
  before_script:
    - az login --service-principal -u $AZURE_SERVICE_PRINCIPAL_APP_ID_DEV -p $AZURE_SERVICE_PRINCIPAL_PASSWORD_DEV --tenant $AZURE_TENANT_DEV
  variables:
    AZURE_STORAGE_RESOURCE_GROUP: storage-resource-group-dev
  rules:
    - if: $CI_COMMIT_BRANCH == "initial"
  variables:
    ENV: 79432dev
############################ Create Infrastructure Resources ############################

image: 
  name: hashicorp/terraform:latest
  entrypoint:
    - '' # DON'T FORGET SET ENTRYPOINT -> Reason Dockerfile has ENTRYPOINT ["terraform"]

before_script:
  - export TF_VAR_ARM_TENANT_ID=$AZURE_TENANT_DEV
  - export TF_VAR_ARM_SUBSCRIPTION_ID=$AZURE_SUBSCRIPTION_ID_DEV
  - export TF_VAR_ARM_CLIENT_ID=$AZURE_CLIENT_ID_DEV
  - export TF_VAR_ARM_CLIENT_SECRET=$AZURE_CLIENT_SECRET
  - cd $TERRAFORM_DIR
  - terraform init -backend-config="env/dev.tfbackend"

.terraform-plan:
  stage: terraform-plan
  script:
    - terraform plan -var-file=env/dev.tfvars -out=tfplan
  artifacts:
    paths:
      - $TERRAFORM_DIR
    expire_in: 1 hrs

terraform-plan-dev:
  extends: 
    - .terraform-plan
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
    - changes:
        - /iac/*

.terraform-apply:
  stage: terraform-apply
  script:
    - terraform apply tfplan
  when: manual

terraform-apply-dev:
  extends: 
    - .terraform-apply
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
    - changes:
        - /iac/*
  needs: ['terraform-plan-dev']

.terraform-destroy:
  stage: terraform-apply
  script:
    - terraform destroy -var-file=env/dev.tfvars --auto-approve
  when: manual

terraform-destroy-dev:
  extends: 
    - .terraform-destroy
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"

############################ Push Docker Images ############################

.push-docker-image:
  stage: docker-push
  image:
    name: docker:stable
  services:
   - name: docker:dind
     alias: dockerdaemon
  variables:
    # Tell docker CLI how to talk to Docker daemon.
    DOCKER_HOST: tcp://dockerdaemon:2375/
    # Use the overlayfs driver for improved performance.
    DOCKER_DRIVER: overlay2
    # Disable TLS since we're running inside local network.
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker build -t $IMAGE_NAME ./microservices/apps/hello-world-app
    - docker tag $IMAGE_NAME $AZURE_CONTAINER_REGISTRY_REPO_NAME/$IMAGE_NAME
    - docker push $AZURE_CONTAINER_REGISTRY_REPO_NAME/$IMAGE_NAME

push-docker-image-dev:
  extends: 
    - .push-docker-image
  before_script:
    - docker login $AZURE_CONTAINER_REGISTRY_REPO_NAME -u $AZURE_CONTAINER_REGISTRY_NAME -p $AZURE_CONTAINER_REGISTRY_USER_PWD
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"